generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Person {
  id              Int               @id @default(autoincrement())
  walletAddress   String            @unique
  tgID            String            @unique
  role            Role              @default(PARTICIPANT)
  events          Event[]
  ParticipantList ParticipantList[]
}

model ParticipantList {
  id       Int               @id @default(autoincrement())
  personID Int
  eventID  Int
  status   ParticipantStatus @default(REGISTERED)
  event    Event             @relation(fields: [eventID], references: [id])
  person   Person            @relation(fields: [personID], references: [id])

  @@unique([personID, eventID])
}

model Event {
  id                     Int               @id @default(autoincrement())
  name                   String
  type                   EventType         @default(NOT_STATED)
  status                 EventStatus       @default(REGISTRATION_OPENED)
  urlCover               String?
  description            String?
  isSBT                  Boolean
  creatorID              Int
  startedAt              DateTime
  finishedAt             DateTime
  locationID             Int?
  nftIpfsUrl             String            @unique
  contractAddress        String?           @unique
  registeredParticipants Int               @default(0)
  countOfRewardTokens    Int
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @default(now())
  approveLink            String?           @unique
  creator                Person            @relation(fields: [creatorID], references: [id])
  location               Location?         @relation(fields: [locationID], references: [id])
  ParticipantList        ParticipantList[]
}

model Location {
  id        Int     @id @default(autoincrement())
  address   String?
  isOffline Boolean
  link      String?
  events    Event[]
}

enum EventType {
  NOT_STATED
  HAKATON
  CONFERENCE
  MEETING
}

enum EventStatus {
  CREATED
  REGISTRATION_OPENED
  REGISTRATION_CLOSED
  FINISHED
}

enum ParticipantStatus {
  REGISTERED
  APPROVED
  RECEIVED_NFT
}

enum Role {
  ADMIN
  PARTICIPANT
}
